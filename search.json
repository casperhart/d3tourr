[{"path":"https://casperhart.github.io/detourr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 detourr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget/adding_a_new_widget.html","id":"prerequisites","dir":"Articles > Adding_a_new_widget","previous_headings":"","what":"Prerequisites","title":"Adding a new display method and widget to {detourr}","text":"set project development, ’ll need install node.js yarn. cloning repository, open terminal install node.js dependencies : bundle typescript code install {detourr} using:","code":"yarn install yarn run build"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget/adding_a_new_widget.html","id":"creating-a-widget","dir":"Articles > Adding_a_new_widget","previous_headings":"","what":"Creating a widget","title":"Adding a new display method and widget to {detourr}","text":"get started, ’ll first create new file srcts/hello_world/index.ts following contents: , HelloWorld widget created ’s class two public methods: renderValue resize. renderValue method takes argument inputData, contain data passed R widget including configuration need, data set, sequence projection matrices representing tour path. moment, logging data browser console. allow us explore ’s structure ’s running.","code":"export class HelloWorld {   private containerElement: HTMLDivElement;   private message: HTMLHeadElement;    constructor(el: HTMLDivElement, width: number, height: number) {     var h = document.createElement(\"h1\");     var t = document.createTextNode(\"Hello, world!\");     h.appendChild(t);     this.message = h;     this.resize(width, height);   }    public renderValue(inputData: any) {     document.body.appendChild(this.message);     console.log(inputData);   }    public resize(width: number, height: number) {     console.log(\"Width: \", width, \", Height: \", height);   } }"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget/adding_a_new_widget.html","id":"bundling-the-widget","dir":"Articles > Adding_a_new_widget","previous_headings":"","what":"Bundling the widget","title":"Adding a new display method and widget to {detourr}","text":"HTMLWidgets package can’t deal typescript code -, need modify webpack configuration gets transpiled javascript bundled package built. requires small modification webpack/package.config.ts include TS code additional entrypoint: webpack/package.config.ts: Now, build install package using yarn run build, file hello_world.bundle.js created inst/htmlwidgets/lib folder alongside existing bundles.","code":"const path = require(\"path\"); const webpack = require(\"webpack\");  module.exports = {   mode: \"production\",   entry: {     \"display_scatter_2d\": \"./srcts/display_scatter_2d/index.ts\",     \"display_scatter_3d\": \"./srcts/display_scatter_3d/index.ts\", +   \"hello_world\": \"./srcts/hello_world/index.ts\",   },   ..."},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget/adding_a_new_widget.html","id":"adding-the-configuration-and-javascript-bindings","dir":"Articles > Adding_a_new_widget","previous_headings":"","what":"Adding the configuration and javascript bindings","title":"Adding a new display method and widget to {detourr}","text":"steps section similar general example htmlwidgets documentation, gloss many technical details . short, require two files widget work: inst/htmlwidgets/hello_world.yaml contains configuration, inst/htmlwidgets/hello_world.js contains javascript bindings. First ’ll set configuration file inst/htmlwidgets/hello_world.yaml: Notice inclusion runtime.bundle.js. contains webpack runtime, code won’t run without . external packages widget loads bundled separately well, need include file main bundle. javascript binding, need create file inst/htmlwidgets/hello_world.js. implemented widget typescript class renderValue resize methods, contents javascript binding can remain quite simple even widget becomes complex: inst/htmlwidgets/hello_world.js:","code":"dependencies:   - name: hello_world      src: htmlwidgets/lib/     version: 0.0.9     script:       # these are specified in the order they should load       - runtime.bundle.js       - hello_world.bundle.js HTMLWidgets.widget({      name: \"hello_world\",     type: \"output\",      factory: function (el, width, height) {         let widget = new hello_world.HelloWorld(el, width, height);         return {             renderValue: function (x) {                 widget.renderValue(x);             },             resize: function (width, height) {                 widget.resize(width, height)             },             s: widget         }     } })"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget/adding_a_new_widget.html","id":"adding-the-display-method-in-r","dir":"Articles > Adding_a_new_widget","previous_headings":"","what":"Adding the display method in R","title":"Adding a new display method and widget to {detourr}","text":"create R binding display_hello_world function. simply function takes detour object returns HTML Widget. example, ’ve also included ... argument can pass parameters htmlwidgets::createWidget, included sensible defaults widget sizingPolicy. R/display_hello_world.R: values detour object d passed hello_world widget’s renderValue method. includes tour path, data, basic configuration. configuration specific widget can appended detourr object widget created.","code":"#' Display Hello World Example #' #' Note that these comments will be converted in to documentation by the #' {roxygen2} package when we run `yarn run build`. As such, the `@export` #' below is necessary, or else this function won't be made available to the #' user #' @param d a `detour` object #' @param ... additional arguments to pass to `htmlwidgets::createWidget` #' @export display_hello_world <- function(d, ...) {   dots <- list(...)   htmlwidgets::createWidget(     name = \"hello_world\",     d,     sizingPolicy = htmlwidgets::sizingPolicy(       viewer.padding = 0,       viewer.paneHeight = 500,       browser.fill = TRUE,       knitr.defaultWidth = 800,       knitr.defaultHeight = 500     ),     package = \"detourr\",     width = dots$width,     height = dots$height   ) }"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget/adding_a_new_widget.html","id":"trying-it-out","dir":"Articles > Adding_a_new_widget","previous_headings":"","what":"Trying it out","title":"Adding a new display method and widget to {detourr}","text":"Now hard part done, need bundle everything together install package: test widget R:  Success! open browser console, can see full structure data set passed widget. can add additional configuation aesthetic mappings need modifying display_hello_world function:","code":"yarn run build library(detourr) detour(tourr::flea, tour_aes(projection = where(is.numeric))) %>%   display_hello_world()"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget/adding_a_new_widget.html","id":"useful-resources","dir":"Articles > Adding_a_new_widget","previous_headings":"","what":"Useful resources","title":"Adding a new display method and widget to {detourr}","text":"Three.js Webpack TypeScript HTMLWidgets","code":""},{"path":"https://casperhart.github.io/detourr/articles/development_setup/detourr_development_setup.html","id":"development-setup","dir":"Articles > Development_setup","previous_headings":"","what":"Development setup","title":"Adding a new display method and widget to {detourr}","text":"Now widget running can make changes TS code, rebuild package, reload R console, view changes running animate_tour . quite slow, repetitively makes poor development experience, section detail additional configuration can use view changes widget real time. done using webpack-dev-server starts Webpack development server localhost:9000, opens UI browser links widgets detourr package, shown :  Clicking links show development widget action, example, clicking display_scatter_3d gives :  section, ’ll create basic widget, make accessible via yarn run start-dev. can run browser, ’ll need create two files: dev/hello_world/sample_data.json: file containing sample data widget use. dev/hello_world/index.html contain logic import class defined , load sample data, render widget. dev/hello_world/sample_data.json dev/hello_world/static/index.html files place, next thing need tell Webpack want bundle hello_world example along existing widgets. bundling configured via webpack/dev.config.ts, two changes need make file: adding item entry tell webpack TS code lives webpack/dev.config.ts adding new pattern CopyPlugin tell webpack find index.html sample_data.json files webpack/dev.config.ts Lastly, need add menu item can navigate widget dev server started. , modify dev/index.ts adding line dev/index.html like : dev/index.html Now, start dev server using yarn run start-dev, see new menu option:  can navigate widget!  set , can get started developing widget Typescript. development server watch TS code changes, update immediately changes saved. code invalid, dev server tell us exactly issue can fix . can modify contents sample_data.json file data expect receive R, modify TS code consume data.","code":"yarn run start-dev #' Display Hello World Example #' #' Note that these comments will be converted in to documentation by the #' {roxygen2} package when we run `yarn run build`. As such, the `@export` #' below is necessary, or else this function won't be made available to the #' user #' #' @export display_hello_world <- function() {   init <- function(data, col_spec, tour_dim) {     data_cols <- tidyselect::eval_select(col_spec, data)     labels <- names(data_cols)     widget <- \"hello_world\"      list(       \"plot\" = list(         labels = labels       ),       \"widget\" = widget,       \"mapping\" = list()     )   }   list(     \"init\" = init   ) } \"hello sample data\" <!DOCTYPE html> <html lang=\"en\">   <head>     <title>Hello World<\/title>     <script src=\"hello_world.bundle.js\"><\/script>   <\/head>   <body>     <div id=\"plot\"><\/div>     <script>       fetch(\"./sample_data.json\").then(function (response) {         // run hello_world using sample data         response.json().then(function (data) {           let el = document.getElementById(\"plot\");           let display = new window['hello_world/hello_world'].HelloWorld(el, 300, 300);           display.renderValue(data);           window.addEventListener(\"resize\", (event) =>             display.resize(window.innerWidth , window.innerHeight)           );         });       });     <\/script>   <\/body> <\/html> entry: {     \"display_scatter_2d/display_scatter_2d\":       \"./srcts/display_scatter_2d/index.ts\",     \"display_scatter_3d/display_scatter_3d\":       \"./srcts/display_scatter_3d/index.ts\", +   \"hello_world/hello_world\": \"./srcts/hello_world/index.ts\",   }, plugins: [       new CopyPlugin({         patterns: [           ... +         { from: \"dev/hello_world/static/\", to: \"hello_world\" },         ],       }),     ], <!DOCTYPE html> <html> <head>    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">    <title>Directory Tree<\/title> <\/head> <body>   <h1>Development Widgets<\/h1><p>   <a href=\"./display_scatter_2d/\">display_scatter_2d<\/a><br>   <a href=\"./display_scatter_3d/\">display_scatter_3d<\/a><br> + <a href=\"./hello_world/\">hello_world<\/a><br>   <br><br> <\/body> <\/html>"},{"path":"https://casperhart.github.io/detourr/articles/development_setup/detourr_development_setup.html","id":"creating-r-and-javascript-bindings","dir":"Articles > Development_setup","previous_headings":"","what":"Creating R and javascript bindings","title":"Adding a new display method and widget to {detourr}","text":"’ve got widget running using dev server, need integrate R package {HTMLWidgets}. steps section similar , additional steps required us bundle widget dependencies. files important us runtime.bundle.js hello_world.bundle.js. hello_world bundle consists code, runtime.bundle.js contains code webpack runtime, required widget work. Later , widget uses third party libraries dependencies, bundled separately added folder, case three.bundle.js.","code":"❯ ls -l inst/htmlwidgets/lib .rw-r--r--  41k chart 30 Jan 13:44 display_scatter_2d.bundle.js .rw-r--r--  40k chart 30 Jan 13:44 display_scatter_3d.bundle.js .rw-r--r--  789 chart 30 Jan 13:44 hello_world.bundle.js .rw-r--r-- 1.2k chart 12 Dec  2021 runtime.bundle.js .rw-r--r-- 622k chart  7 Jan 14:05 three.bundle.js .rw-r--r--   92 chart 12 Dec  2021 three.bundle.js.LICENSE.txt"},{"path":"https://casperhart.github.io/detourr/articles/development_setup/detourr_development_setup.html","id":"dependencies","dir":"Articles > Development_setup","previous_headings":"Creating R and javascript bindings","what":"Dependencies","title":"Adding a new display method and widget to {detourr}","text":"information file can found htmlwidgets documentation","code":""},{"path":"https://casperhart.github.io/detourr/articles/development_setup/detourr_development_setup.html","id":"r-binding-and-display-method","dir":"Articles > Development_setup","previous_headings":"Creating R and javascript bindings","what":"R binding and display method","title":"Adding a new display method and widget to {detourr}","text":"make call animate_tour, specify data, tour_path, display_method arguments. Technically speaking, R binding need (detailed htmlwidgets documentation) already implemented animate_tour function. get widget show, however, need implement new display method provides necessary context animate_tour widget called. R/display_hello_world.R","code":""},{"path":[]},{"path":"https://casperhart.github.io/detourr/articles/development_setup/detourr_development_setup.html","id":"some-useful-tips","dir":"Articles > Development_setup","previous_headings":"","what":"Some useful tips","title":"Adding a new display method and widget to {detourr}","text":"useful tips make things little easier developing widgets.","code":""},{"path":"https://casperhart.github.io/detourr/articles/development_setup/detourr_development_setup.html","id":"generating-sample_data-json","dir":"Articles > Development_setup","previous_headings":"Some useful tips","what":"Generating sample_data.json","title":"Adding a new display method and widget to {detourr}","text":"Rather creating modifying sample_data.json hand development widget, ’s best add code scripts/generate_sample_data.R generate file . example: scripts/generate_sample_data.R","code":"set.seed(1)  p <- animate_tour(   tourr::flea,   display = display_hello_world(),   tour_path = grand_tour(3) )  writeLines(   jsonlite::toJSON(p$x, auto_unbox = TRUE, null = \"null\"),   \"../dev/hello_world/static/sample_data.json\" )"},{"path":"https://casperhart.github.io/detourr/articles/display_scatter_interactivity/display_scatter_interactivity.html","id":"data","dir":"Articles > Display_scatter_interactivity","previous_headings":"","what":"Data","title":"Introducing and interacting with `display_scatter()`","text":"following examples, pdfsense dataset liminal package used. (Lee 2021).","code":"library(detourr) library(dplyr) data(pdfsense, package = \"liminal\")  pcs <- pdfsense %>%   select(X1:X56) %>%   prcomp()  pcs <- as_tibble(pcs$x) %>%   select(PC1:PC6)  plot_data <- pdfsense %>%   select(-(X1:X56)) %>%   mutate(Type = as.character(Type)) %>%   bind_cols(pcs)"},{"path":"https://casperhart.github.io/detourr/articles/display_scatter_interactivity/display_scatter_interactivity.html","id":"examples","dir":"Articles > Display_scatter_interactivity","previous_headings":"","what":"Examples","title":"Introducing and interacting with `display_scatter()`","text":"interactivity described vignette can demonstrated two examples. 2D variant display_scatter(): 3D variant:","code":"set.seed(1)  detour(   plot_data,   tour_aes(     projection = starts_with(\"PC\"),     colour = Type, label = I(ID)   ) ) %>%   display_scatter(axes = FALSE, alpha = 0.7, size = 0.5) set.seed(1)  detour(   plot_data,   tour_aes(     projection = starts_with(\"PC\"),     colour = Type,     label = c(InFit, Type, ID, pt, x, mu)   ) ) %>%   tour_path(grand_tour(3)) %>%   display_scatter(axes = FALSE, alpha = 0.7, size = 0.5)"},{"path":"https://casperhart.github.io/detourr/articles/display_scatter_interactivity/display_scatter_interactivity.html","id":"label-aesthetics","dir":"Articles > Display_scatter_interactivity","previous_headings":"","what":"Label aesthetics","title":"Introducing and interacting with `display_scatter()`","text":"example, labels defined within call tour_aes, contains aesthetic mappings tour. label aesthetic produces tooltip shown whenever mouse hovered data point:  default, text tooltip format column_name: value, specified column new line. want control appears tooltip, can use () function values aesthetic column appear -. example 2D scatter plot example, ID column specified -using tour_aes(label = (ID)):  using () function label aesthetic, one column can specified time. split text tooltip multiple line, need use <br> line break instead \\n.","code":""},{"path":"https://casperhart.github.io/detourr/articles/display_scatter_interactivity/display_scatter_interactivity.html","id":"controls","dir":"Articles > Display_scatter_interactivity","previous_headings":"","what":"Controls","title":"Introducing and interacting with `display_scatter()`","text":"following brief breakdown controls found left side visual. Note icon currently selected control highligted blue; otherwise black. hover icons display_scatter() widget, alternative text shown. example using box selection control, brush control, colour selector together:","code":""},{"path":"https://casperhart.github.io/detourr/articles/display_scatter_interactivity/display_scatter_interactivity.html","id":"timeline-controls","dir":"Articles > Display_scatter_interactivity","previous_headings":"","what":"Timeline controls","title":"Introducing and interacting with `display_scatter()`","text":"timeline bottom widget controls play pause, allows scrubbing specific point tour. timeline can also used jump specific basis clicking white basis markers, hovering mouse basis markers display index basis. funcionality shown :","code":""},{"path":"https://casperhart.github.io/detourr/articles/display_scatter_interactivity/display_scatter_interactivity.html","id":"conclusion","dir":"Articles > Display_scatter_interactivity","previous_headings":"","what":"Conclusion","title":"Introducing and interacting with `display_scatter()`","text":"vignette ’ve demonstrated interactivity display_scatter() display method detourr package. issues suggestions, please open issue github.","code":""},{"path":"https://casperhart.github.io/detourr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Casper Hart. Author, maintainer. Earo Wang. Author, thesis advisor.","code":""},{"path":"https://casperhart.github.io/detourr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hart C, Wang E (2022). detourr: Animations tourr using htmlwidgets. R package version 0.0.9, https://casperhart.github.io/detourr/.","code":"@Manual{,   title = {detourr: Animations for {tourr} using htmlwidgets},   author = {Casper Hart and Earo Wang},   year = {2022},   note = {R package version 0.0.9},   url = {https://casperhart.github.io/detourr/}, }"},{"path":"https://casperhart.github.io/detourr/index.html","id":"detourr","dir":"","previous_headings":"","what":"Animations for {tourr} using htmlwidgets","title":"Animations for {tourr} using htmlwidgets","text":"Animations {tourr} using htmlwidgets performance portability.","code":""},{"path":"https://casperhart.github.io/detourr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Animations for {tourr} using htmlwidgets","text":"Install package running following R:","code":"remotes::install_github(\"casperhart/detourr\")"},{"path":"https://casperhart.github.io/detourr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Animations for {tourr} using htmlwidgets","text":"","code":"# 2D scatter library(tourr) library(detourr) detour(olive, tour_aes(projection = palmitic:eicosenoic, colour = region)) %>%   display_scatter() # 3D scatter detour(olive, tour_aes(projection = palmitic:eicosenoic, colour = region)) %>%   tour_path(grand_tour(3)) %>%   display_scatter()"},{"path":[]},{"path":"https://casperhart.github.io/detourr/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Animations for {tourr} using htmlwidgets","text":"project uses TypeScript code needs compiled bundled package work. , need node.js, yarn installed. cloning repository, can install node.js dependencies via: Compile bundle TypeScript code install R package source running: TypeScript code powers HTMLWidgets can also run standalone app using webpack-dev-server follows: start webpack dev server, automatically recompile reload TypeScript code changes made. sample data HTML used dev server can found ./dev, loaded memory based configuration webpack/dev.config.ts wish make changes HTML files dev/, debug yarn run start-dev command, can instead run yarn run build-dev. load files dev/ folder called dev_build/ rather memory, can make debugging easier.","code":"yarn install yarn run build yarn run start-dev"},{"path":"https://casperhart.github.io/detourr/reference/detour.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate a detour visualisation — detour","title":"Initiate a detour visualisation — detour","text":"function initialises detour object , along tour_path display_functions used build detour visualisation.","code":""},{"path":"https://casperhart.github.io/detourr/reference/detour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate a detour visualisation — detour","text":"","code":"detour(.data, mapping)"},{"path":"https://casperhart.github.io/detourr/reference/detour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate a detour visualisation — detour","text":".data data frame, tibble, crosstalk::SharedData object mapping mapping data columns aesthetic values using tour_aes function. required aesthetic projection, determines columns used generate tour path.","code":""},{"path":"https://casperhart.github.io/detourr/reference/detour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initiate a detour visualisation — detour","text":"","code":"data(pdfsense, package = \"liminal\")  pcs <- pdfsense %>%   select(X1:X56) %>%   prcomp() #> Error in select(., X1:X56): could not find function \"select\"  pcs <- as_tibble(pcs$x) %>% select(PC1:PC6) #> Error in select(., PC1:PC6): could not find function \"select\"  plot_data <- pdfsense %>%   select(-(X1:X56)) %>%   mutate(Type = as.factor(Type)) %>%   bind_cols(pcs) #> Error in bind_cols(., pcs): could not find function \"bind_cols\"  detour(plot_data, tour_aes(projection = starts_with(\"PC\"), colour = Type)) %>%   tour_path(grand_tour(3), fps = 60) %>%   display_scatter(alpha = 0.7, axes = FALSE) #> Error in detour(plot_data, tour_aes(projection = starts_with(\"PC\"), colour = Type)): object 'plot_data' not found"},{"path":"https://casperhart.github.io/detourr/reference/detourr-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for detourr — detourr-shiny","title":"Shiny bindings for detourr — detourr-shiny","text":"Output render functions using detourr shiny. output function used must match display method tour dim used, lead strange behavour.","code":""},{"path":"https://casperhart.github.io/detourr/reference/detourr-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for detourr — detourr-shiny","text":"","code":"displayScatter2dOutput(output_id, width = \"100%\", height = \"400px\")  displayScatter3dOutput(output_id, width = \"100%\", height = \"400px\")  shinyRenderDisplayScatter2d(expr, env = parent.frame(), quoted = FALSE)  shinyRenderDisplayScatter3d(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://casperhart.github.io/detourr/reference/detourr-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for detourr — detourr-shiny","text":"output_id output variable read width Must valid CSS unit (like \"100%\", \"400px\", \"auto\") number, coerced string \"px\" appended. height Must valid CSS unit (like \"100%\", \"400px\", \"auto\") number, coerced string \"px\" appended. expr expression generates detourr widget env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"2D and 3D Scatterplot display for tours — display_scatter","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"Display method high performance 2D 3D scatterplot. Performance achieved use Three.js / WebGL, 2D 3D variant selected automatically based tour generator provided.","code":""},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"","code":"display_scatter(   d,   ...,   palette = viridisLite::viridis,   center = TRUE,   axes = TRUE,   edges = NULL,   paused = TRUE,   scale_factor = NULL )"},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"d detour object ... used support aesthetic parameters plot, including size: point size, defaults 1 alpha: point opacity, defaults 1 background_colour: defaults \"white\" palette Colour palette use colour aesthetic. Can : character vector R colours. match number levels colour aesthetic, number bins use continuous colours. function takes number colours use input returns character vector colour names / hex values output. center TRUE, center projected data (0, 0, 0). axes Can one : TRUE draw axes use column names axis labels FALSE draw axes labels NULL draw axes labels unnamed vector labels length cols named vector form c(\"h\" = \"head\"), head renamed h edges two column numeric matrix giving indices ends lines. paused whether widget initialised 'paused' state scale_factor used multiplier point coordinates displayed sensible range. Defaults reciprocal maximum distance point origin.","code":""},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"display method produces interactive scatterplot animation supports 2D 3D tours. Linked selection filtering also supported using crosstalk. set interactive controls available : timeline play / pause button indicators position basis used. basis indicators can hovered mouse show index basis, clicked jump basis. timeline also allows clicking dragging scrubber move individual frame animation. Orbit controls. 2D variant, allows projection rotated clicking dragging left right. 3D variant, full orbit controls available clicking dragging. orbit pan controls, scroll wheel can used zoom. Pan controls, work similarly orbit controls move camera laterally / vertically rather rotating Resetting orbit pan controls Selection highlighting. Multiple selection possible using shift key Colouring / brushing highlighted points","code":""},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"","code":"data(pdfsense, package = \"liminal\")  pcs <- pdfsense %>%   select(X1:X56) %>%   prcomp() #> Error in select(., X1:X56): could not find function \"select\"  pcs <- as_tibble(pcs$x) %>% select(PC1:PC6) #> Error in select(., PC1:PC6): could not find function \"select\"  plot_data <- pdfsense %>%   select(-(X1:X56)) %>%   mutate(Type = as.factor(Type)) %>%   bind_cols(pcs) #> Error in bind_cols(., pcs): could not find function \"bind_cols\"  detour(plot_data, tour_aes(projection = starts_with(\"PC\"), colour = Type)) %>%   tour_path(grand_tour(3), fps = 60) %>%   display_scatter(alpha = 0.7, axes = FALSE) #> Error in detour(plot_data, tour_aes(projection = starts_with(\"PC\"), colour = Type)): object 'plot_data' not found"},{"path":"https://casperhart.github.io/detourr/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>% tourr dependence_tour, frozen_guided_tour, frozen_tour, grand_tour, guided_section_tour, guided_tour, little_tour, local_tour, planned_tour","code":""},{"path":"https://casperhart.github.io/detourr/reference/tour_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aesthetic mapping for tours — tour_aes","title":"Aesthetic mapping for tours — tour_aes","text":"Aesthetic mapping tours describing variables data mapped visual properties tour animation.","code":""},{"path":"https://casperhart.github.io/detourr/reference/tour_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aesthetic mapping for tours — tour_aes","text":"","code":"tour_aes(...)"},{"path":"https://casperhart.github.io/detourr/reference/tour_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aesthetic mapping for tours — tour_aes","text":"... list name-value pairs form 'aesthetic = variable'. Variables evaluated using tidyselect syntax.","code":""},{"path":"https://casperhart.github.io/detourr/reference/tour_aes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aesthetic mapping for tours — tour_aes","text":"","code":"detour(tour::flea, tour_aes(projection = where(is.numeric), colour = \"species\")) %>%   tour_path(grand_tour(3)) %>%   display_scatter(alpha = 0.5) #> Error in loadNamespace(x): there is no package called ‘tour’"},{"path":"https://casperhart.github.io/detourr/reference/tour_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a tour path for a detour object — tour_path","title":"Generate a tour path for a detour object — tour_path","text":"function takes detour object input, generates sequence projection matrices tour. return value another detour object tour path metadata attached. can passed display_*#' function generate detour visualisation.","code":""},{"path":"https://casperhart.github.io/detourr/reference/tour_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a tour path for a detour object — tour_path","text":"","code":"tour_path(   d,   tour_path = grand_tour(2),   start = NULL,   aps = 1,   fps = 30,   max_bases = 10 )"},{"path":"https://casperhart.github.io/detourr/reference/tour_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a tour path for a detour object — tour_path","text":"d detour object tour_path tour path generator, defaults 2d grand tour start projection start , specified, uses default associated tour path aps target angular velocity (radians per second) fps target frames per second","code":""}]
